<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[All Abouts]]></title>
  <link href="http://balta2ar.github.io/atom.xml" rel="self"/>
  <link href="http://balta2ar.github.io/"/>
  <updated>2013-10-13T20:13:09+04:00</updated>
  <id>http://balta2ar.github.io/</id>
  <author>
    <name><![CDATA[Yuri Bochkarev]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Octopress to rule them all]]></title>
    <link href="http://balta2ar.github.io/blog/2013/10/13/octopress-to-rule-them-all/"/>
    <updated>2013-10-13T19:11:00+04:00</updated>
    <id>http://balta2ar.github.io/blog/2013/10/13/octopress-to-rule-them-all</id>
    <content type="html"><![CDATA[<p>It&#8217;s been a long while since I decided to switch from <a href="http://baltazar-bz.blogspot.ru/">Google Blogspot</a>
to Octopress and start blogging like a geek. For almost a year I couldn&#8217;t
force myself to write even a short post. There were different reasons to that,
and some of them are technical. Being a complete rookie to Ruby, I was scared
by all these daunting rake commands and Octopress machinery. It actually helped
me to write down and summarize the commands that I need in a single place. Now
I&#8217;d like them to be a separate post just as a little reminder to myself.</p>

<!-- more -->


<p>What I liked about Octopress immediately is markdown, of course. It wasn&#8217;t
nearly convenient to fix an old post in Blogspot as it is in Octopress. You can
edit Blogspot posts right onsite to make it easier. Not for me. The feature of
switching modes between compose/HTML didn&#8217;t help at all. Stop messing with
HTML in every post was a very attactive feature of Octopress. Besides, having
a blog in public so that people can send you pull requests is so cool that it
must be declared illegal.</p>

<p>Anyway, I made my decision and here it goes. I followed carefully <a href="http://octopress.org/docs/">Octopress
documentation</a>. It wasn&#8217;t a piece of cake to install
correct version of Ruby, all necessary bundles, deal with <a href="http://www.nonsenseby.me/blog/2013/04/13/arch-linux/">broken</a>
<a href="https://github.com/tmm1/pygments.rb/issues/45">pygments</a>, configure my own
color scheme, and got it up and running eventually. Hopefully, I got through
all that and now it&#8217;s time to relax in a serene joy and write one post after
another like a mad.</p>

<p>To do that, I use the following commands.</p>

<h3>1. Switch to source branch</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git checkout source</span></code></pre></td></tr></table></div></figure>


<h3>2. Activate rake</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>source /home/bz/.rvm/scripts/rvm
</span><span class='line'>rvm use 1.9.3</span></code></pre></td></tr></table></div></figure>


<h3>3. Setup environment for pygmentize</h3>

<p>The problem with pygmentize out of the box is that mentos.py in my version
calls for <code>/usr/bin/env python</code> which is <code>python3</code> in ArchLinux by default.
However, <code>python2</code> is required. To fix that, I created virtualenv where
<code>python2.7</code> is active by default. Activate it before generating the blog:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>source ~/.virtualenvs/blog_env/bin/activate</span></code></pre></td></tr></table></div></figure>


<h3>4. Run preview/generate server</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>jekyll --auto --server --future</span></code></pre></td></tr></table></div></figure>


<p>Other useful commands might be:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake preview
</span><span class='line'>rake watch</span></code></pre></td></tr></table></div></figure>


<h3>5. Create new post</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake new_post\["How I spent the summer"\]</span></code></pre></td></tr></table></div></figure>


<h3>6. Deploy</h3>

<p>When ready, I usually do <code>rake generate</code> once again (just to be safe),
commit to the source branch, push and finally deploy. All this happens in the
source branch of the blog (<code>rake deploy</code> automatically deals with <code>master</code>):</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake generate
</span><span class='line'>git add .
</span><span class='line'>git commit -m "New post about the last summer"
</span><span class='line'>git push
</span><span class='line'>rake deploy</span></code></pre></td></tr></table></div></figure>


<p>And I got new post upstream in a matter of seconds.</p>

<hr />
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Download iTunes U Course - The Hacker Way]]></title>
    <link href="http://balta2ar.github.io/blog/2013/10/13/download-itunes-u-course-the-hacker-way/"/>
    <updated>2013-10-13T13:48:00+04:00</updated>
    <id>http://balta2ar.github.io/blog/2013/10/13/download-itunes-u-course-the-hacker-way</id>
    <content type="html"><![CDATA[<p>Today, kids, we are going to download iTunes U course almost exclusively from
the command line.</p>

<!-- more -->


<h2>Why</h2>

<p>The easiest way to do that is to use iTunes to download all that for you.
Unfortunately, while I have iPod/iPad in my home ecosystem, I don&#8217;t have any
Mac computers. Thus, I&#8217;m running iTunes in a virtual machine on Windows.
Imagine my user experience from such combination. Pure pain and suffering.</p>

<p>There wouldn&#8217;t be this post if it was all smooth. For unknown reasons my iTunes
doesn&#8217;t save downloaded video files. I can see it&#8217;s downloading them, I can
see the temp file growing, but when it&#8217;s done, puff, I can&#8217;t find the file
anywhere. Luckily, there is a solution. It is a pity but you still need iTunes
for a couple of steps.</p>

<h2>How</h2>

<p>OK, let&#8217;s do it. Say, you found an interesting course on iTunes U:</p>

<p><img src="./ml.png"></p>

<h3>Step 1. Subscribe to the course in iTunes</h3>

<h3>Step 2. Copy course url</h3>

<p>Click on any item in the course materials list and
select &#8220;Copy iTunes U URL&#8221;.</p>

<p><img src="./copy-url.png"></p>

<p>NB: There is <a href="https://itunesu.itunes.apple.com/coursemanager/">iTunes U Course Manager</a>
web page and I presume you might get the feed URL there (though I really doubt
you can). However, my country isn&#8217;t enjoying Apple&#8217;s favour.</p>

<p><img src="./bad-country.png"></p>

<h3>Step 3. Download the feed</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>wget -O list.xml https://p1-u.itunes.apple.com/WebObjects/LZStudent.woa/ra/feed/CODBABB3ZC</span></code></pre></td></tr></table></div></figure>


<h3>Step 4. Extract links and titles</h3>

<p>The feed contains <code>feed/entry</code> items in the format as follows:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;feed</span> <span class="na">xmlns=</span><span class="s">&quot;http://www.w3.org/2005/Atom&quot;</span> <span class="na">xmlns:itms=</span><span class="s">&quot;http://www.itunes.com/dtds/itunesu-1.0.dtd&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;title</span> <span class="na">type=</span><span class="s">&quot;text&quot;</span><span class="nt">&gt;</span>Machine Learning<span class="nt">&lt;/title&gt;</span>
</span><span class='line'>    <span class="nt">&lt;subtitle</span> <span class="na">type=</span><span class="s">&quot;text&quot;</span><span class="nt">&gt;</span><span class="ni">&amp;lt;</span>div<span class="ni">&amp;gt;&amp;lt;</span>div<span class="ni">&amp;gt;&amp;lt;</span>strong<span class="ni">&amp;gt;</span>A real Caltech course...<span class="nt">&lt;/subtitle&gt;</span>
</span><span class='line'>    <span class="nt">&lt;updated&gt;</span>2013-06-12T00:19:12PDT<span class="nt">&lt;/updated&gt;</span>
</span><span class='line'>    <span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">&quot;alternate&quot;</span> <span class="na">type=</span><span class="s">&quot;text/html&quot;</span>
</span><span class='line'>          <span class="na">href=</span><span class="s">&quot;https://p1-u.itunes.apple.com/WebObjects/LZStudent.woa/ra/courses/CODBABB3ZC&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;id&gt;</span>1/CODBABB3ZC<span class="nt">&lt;/id&gt;</span>
</span><span class='line'>    <span class="nt">&lt;itms:courseid&gt;</span>CODBABB3ZC<span class="nt">&lt;/itms:courseid&gt;</span>
</span><span class='line'>    <span class="nt">&lt;itms:auditUrl&gt;</span>https://itunesu.itunes.apple.com/audit/CODBABB3ZC<span class="nt">&lt;/itms:auditUrl&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;entry&gt;</span>
</span><span class='line'>        <span class="nt">&lt;author&gt;</span>
</span><span class='line'>            <span class="nt">&lt;name&gt;</span>Dr. Yaser Abu-Mostafa<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/author&gt;</span>
</span><span class='line'>        <span class="nt">&lt;title</span> <span class="na">type=</span><span class="s">&quot;html&quot;</span><span class="nt">&gt;</span><span class="cp">&lt;![CDATA[AC___Lecture 01 slides]]&gt;</span><span class="nt">&lt;/title&gt;</span>
</span><span class='line'>        <span class="nt">&lt;id&gt;</span>1/CODBABB3ZC/MAES7ECEVA<span class="nt">&lt;/id&gt;</span>
</span><span class='line'>        <span class="nt">&lt;updated&gt;</span>2013-06-11T23:25:24PDT<span class="nt">&lt;/updated&gt;</span>
</span><span class='line'>        <span class="nt">&lt;published&gt;</span>2012-06-14T15:07:36PDT<span class="nt">&lt;/published&gt;</span>
</span><span class='line'>        <span class="nt">&lt;summary</span> <span class="na">type=</span><span class="s">&quot;html&quot;</span><span class="nt">&gt;</span><span class="cp">&lt;![CDATA[AC___Lecture 01 slides]]&gt;</span><span class="nt">&lt;/summary&gt;</span>
</span><span class='line'>        <span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">&quot;enclosure&quot;</span> <span class="na">type=</span><span class="s">&quot;application/pdf&quot;</span>
</span><span class='line'>              <span class="na">href=</span><span class="s">&quot;http://a1372.phobos.apple.com/us/r30/CobaltPublic/v4/35/56/6a/35566a02-1e0a-3db8-17e2-69be6445ba9b/208-5815754981465838988-ACsld01.pdf&quot;</span>
</span><span class='line'>    <span class="na">length=</span><span class="s">&quot;300673&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/entry&gt;</span>
</span><span class='line'>
</span><span class='line'>...
</span></code></pre></td></tr></table></div></figure>


<p>It is very convenient to use <a href="http://xmlstar.sourceforge.net/doc/UG/xmlstarlet-ug.html">xmlstartlet</a>
to extract titles and links from the feed. Note, however, that xmlstartlet is
very picky to namespace (thanks to <a href="http://stackoverflow.com/questions/9025492/xmlstarlet-does-not-select-anything">this</a>
answer). Extraction command will look as follows:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>xml sel -N x=&quot;http://www.w3.org/2005/Atom&quot; -t -m //x:entry -v x:title -o &quot;|&quot; -v x:link/@href -n list.xml &gt; fmt.txt
</span></code></pre></td></tr></table></div></figure>


<h3>Step 5. Download the course</h3>

<p>Now all that is left is to read titles and links and
download them. I prefer to use <a href="http://aria2.sourceforge.net/">aria2c</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>IFS=&#39;|&#39; <span class="err">&amp;&amp;</span> while read a b; do n=$a.${b##*.}; aria2c --allow-overwrite=false --auto-file-renaming=false -o $n $b; done <span class="nt">&lt; fmt.txt</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>${b##*.}</code> is a command to get filename extension (see <a href="http://stackoverflow.com/questions/965053/extract-filename-and-extension-in-bash">this</a>
and <a href="http://www.gnu.org/software/bash/manual/html_node/Shell-Parameter-Expansion.html#Shell-Parameter-Expansion">this</a>)</p>

<h2>References</h2>

<ol>
<li><a href="http://alistairisrael.wordpress.com/2007/09/26/querying-an-xml-document-using-xmlstarlet/">Querying an XML document using XMLStarlet</a></li>
<li><a href="http://xmlstar.sourceforge.net/doc/UG/xmlstarlet-ug.html">XmlStarlet Command Line XML Toolkit User&#8217;s Guide</a></li>
<li><a href="http://www.freesoftwaremagazine.com/articles/xml_starlet">XMLStarlet: a Unix toolkit for XML</a></li>
</ol>

]]></content>
  </entry>
  
</feed>
